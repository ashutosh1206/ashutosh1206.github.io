<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Wiener's-Attack on Ashutosh Ahelleya</title><link>https://ashutosh1206.github.io/tags/wieners-attack/</link><description>Recent content in Wiener's-Attack on Ashutosh Ahelleya</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 18 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://ashutosh1206.github.io/tags/wieners-attack/index.xml" rel="self" type="application/rss+xml"/><item><title>Multi Layer RSA - InCTFi 2017</title><link>https://ashutosh1206.github.io/ctf/inctfi17-multilayer-rsa/</link><pubDate>Mon, 18 Dec 2017 00:00:00 +0000</pubDate><guid>https://ashutosh1206.github.io/ctf/inctfi17-multilayer-rsa/</guid><description>Challenge Points: 100
Challenge Description: [None]
Intended Solution
This is probably the easiest challenge in the Crypto section for this year&amp;rsquo;s InCTF. The encryption script:
from Crypto.Util.number import * flag = open(&amp;#34;flag.txt&amp;#34;).read() flag = int(flag.encode(&amp;#34;hex&amp;#34;),16) p = getPrime(512) q = getPrime(512) n = p*q phin = (p-1)*(q-1) encryption_keys = [34961, 3617491, 68962801, 293200159531, 1191694878666066510321450623792489136756229172407332230462797663298426983932272792657383336660801913848162204216417540955677965706955404313949733712340714861638106185597684745174398501025724130404133569866642454996521744281284226124355987843894614599718553178595963014434904833] for i in encryption_keys: assert GCD(i,phin) == 1 for i in encryption_keys: flag = pow(flag, i, n) flag = hex(flag)[2:].</description></item></channel></rss>