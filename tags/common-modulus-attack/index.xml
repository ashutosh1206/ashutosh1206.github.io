<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Common-Modulus-Attack on Ash&#39;s blog</title>
    <link>https://ashutosh1206.github.io/tags/common-modulus-attack/</link>
    <description>Recent content in Common-Modulus-Attack on Ash&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Dec 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://ashutosh1206.github.io/tags/common-modulus-attack/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RSA 1s Fun - InCTFi 2017</title>
      <link>https://ashutosh1206.github.io/ctf/inctfi17-rsaisfun/</link>
      <pubDate>Sun, 17 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ashutosh1206.github.io/ctf/inctfi17-rsaisfun/</guid>
      <description>Challenge Points: 150
Challenge Description: Mathematics and Crypto make a deadly combination!
Intended solution!
The challenge, as the description suggests, involves applying mathematics to solve the RSA based encryption system. The encryption script:
from Crypto.Util.number import * e1 = 9 e2 = 123 def prime_gen(): while True: p = getPrime(1024) q = getPrime(1024) n = p*q phin = (p-1)*(q-1) if GCD(e1, phin) == 1 and GCD(e2, phin) == 1: return (p, q, n) p, q, n = prime_gen() print &amp;#34;p: &amp;#34;, p print &amp;#34;q: &amp;#34;, q print &amp;#34;n: &amp;#34;, n flag = bytes_to_long(open(&amp;#34;flag.</description>
    </item>
    
  </channel>
</rss>
